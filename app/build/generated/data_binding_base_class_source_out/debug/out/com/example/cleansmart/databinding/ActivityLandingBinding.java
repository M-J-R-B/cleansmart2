// Generated by view binder compiler. Do not edit!
package com.example.cleansmart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleansmart.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLandingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout addTaskAction;

  @NonNull
  public final LayoutBottomNavigationBinding bottomNavigation;

  @NonNull
  public final LinearLayout cameraAction;

  @NonNull
  public final FloatingActionButton cameraFab;

  @NonNull
  public final TextView dashboardTitle;

  @NonNull
  public final TextView emptyTasksText;

  @NonNull
  public final TextView hiText;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final CardView quickActionsCard;

  @NonNull
  public final TextView quickActionsTitle;

  @NonNull
  public final LinearLayout scanAction;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final RecyclerView taskGroupsRecyclerView;

  @NonNull
  public final TextView tasksText;

  @NonNull
  public final CardView welcomeCard;

  @NonNull
  public final TextView welcomeText;

  private ActivityLandingBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout addTaskAction, @NonNull LayoutBottomNavigationBinding bottomNavigation,
      @NonNull LinearLayout cameraAction, @NonNull FloatingActionButton cameraFab,
      @NonNull TextView dashboardTitle, @NonNull TextView emptyTasksText, @NonNull TextView hiText,
      @NonNull ConstraintLayout main, @NonNull CardView quickActionsCard,
      @NonNull TextView quickActionsTitle, @NonNull LinearLayout scanAction,
      @NonNull NestedScrollView scrollView, @NonNull RecyclerView taskGroupsRecyclerView,
      @NonNull TextView tasksText, @NonNull CardView welcomeCard, @NonNull TextView welcomeText) {
    this.rootView = rootView;
    this.addTaskAction = addTaskAction;
    this.bottomNavigation = bottomNavigation;
    this.cameraAction = cameraAction;
    this.cameraFab = cameraFab;
    this.dashboardTitle = dashboardTitle;
    this.emptyTasksText = emptyTasksText;
    this.hiText = hiText;
    this.main = main;
    this.quickActionsCard = quickActionsCard;
    this.quickActionsTitle = quickActionsTitle;
    this.scanAction = scanAction;
    this.scrollView = scrollView;
    this.taskGroupsRecyclerView = taskGroupsRecyclerView;
    this.tasksText = tasksText;
    this.welcomeCard = welcomeCard;
    this.welcomeText = welcomeText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLandingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLandingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_landing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLandingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addTaskAction;
      LinearLayout addTaskAction = ViewBindings.findChildViewById(rootView, id);
      if (addTaskAction == null) {
        break missingId;
      }

      id = R.id.bottomNavigation;
      View bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }
      LayoutBottomNavigationBinding binding_bottomNavigation = LayoutBottomNavigationBinding.bind(bottomNavigation);

      id = R.id.cameraAction;
      LinearLayout cameraAction = ViewBindings.findChildViewById(rootView, id);
      if (cameraAction == null) {
        break missingId;
      }

      id = R.id.cameraFab;
      FloatingActionButton cameraFab = ViewBindings.findChildViewById(rootView, id);
      if (cameraFab == null) {
        break missingId;
      }

      id = R.id.dashboardTitle;
      TextView dashboardTitle = ViewBindings.findChildViewById(rootView, id);
      if (dashboardTitle == null) {
        break missingId;
      }

      id = R.id.emptyTasksText;
      TextView emptyTasksText = ViewBindings.findChildViewById(rootView, id);
      if (emptyTasksText == null) {
        break missingId;
      }

      id = R.id.hiText;
      TextView hiText = ViewBindings.findChildViewById(rootView, id);
      if (hiText == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.quickActionsCard;
      CardView quickActionsCard = ViewBindings.findChildViewById(rootView, id);
      if (quickActionsCard == null) {
        break missingId;
      }

      id = R.id.quickActionsTitle;
      TextView quickActionsTitle = ViewBindings.findChildViewById(rootView, id);
      if (quickActionsTitle == null) {
        break missingId;
      }

      id = R.id.scanAction;
      LinearLayout scanAction = ViewBindings.findChildViewById(rootView, id);
      if (scanAction == null) {
        break missingId;
      }

      id = R.id.scrollView;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.taskGroupsRecyclerView;
      RecyclerView taskGroupsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (taskGroupsRecyclerView == null) {
        break missingId;
      }

      id = R.id.tasksText;
      TextView tasksText = ViewBindings.findChildViewById(rootView, id);
      if (tasksText == null) {
        break missingId;
      }

      id = R.id.welcomeCard;
      CardView welcomeCard = ViewBindings.findChildViewById(rootView, id);
      if (welcomeCard == null) {
        break missingId;
      }

      id = R.id.welcomeText;
      TextView welcomeText = ViewBindings.findChildViewById(rootView, id);
      if (welcomeText == null) {
        break missingId;
      }

      return new ActivityLandingBinding((ConstraintLayout) rootView, addTaskAction,
          binding_bottomNavigation, cameraAction, cameraFab, dashboardTitle, emptyTasksText, hiText,
          main, quickActionsCard, quickActionsTitle, scanAction, scrollView, taskGroupsRecyclerView,
          tasksText, welcomeCard, welcomeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
