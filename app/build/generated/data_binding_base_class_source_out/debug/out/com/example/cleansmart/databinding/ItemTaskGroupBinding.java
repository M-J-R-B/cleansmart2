// Generated by view binder compiler. Do not edit!
package com.example.cleansmart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleansmart.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTaskGroupBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView calendarIcon;

  @NonNull
  public final TextView dateText;

  @NonNull
  public final ImageView menuIcon;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView progressLabel;

  @NonNull
  public final ImageView timeIcon;

  @NonNull
  public final TextView timeText;

  @NonNull
  public final TextView todoTitle;

  private ItemTaskGroupBinding(@NonNull CardView rootView, @NonNull ImageView calendarIcon,
      @NonNull TextView dateText, @NonNull ImageView menuIcon, @NonNull ProgressBar progressBar,
      @NonNull TextView progressLabel, @NonNull ImageView timeIcon, @NonNull TextView timeText,
      @NonNull TextView todoTitle) {
    this.rootView = rootView;
    this.calendarIcon = calendarIcon;
    this.dateText = dateText;
    this.menuIcon = menuIcon;
    this.progressBar = progressBar;
    this.progressLabel = progressLabel;
    this.timeIcon = timeIcon;
    this.timeText = timeText;
    this.todoTitle = todoTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTaskGroupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTaskGroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_task_group, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTaskGroupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calendarIcon;
      ImageView calendarIcon = ViewBindings.findChildViewById(rootView, id);
      if (calendarIcon == null) {
        break missingId;
      }

      id = R.id.dateText;
      TextView dateText = ViewBindings.findChildViewById(rootView, id);
      if (dateText == null) {
        break missingId;
      }

      id = R.id.menuIcon;
      ImageView menuIcon = ViewBindings.findChildViewById(rootView, id);
      if (menuIcon == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressLabel;
      TextView progressLabel = ViewBindings.findChildViewById(rootView, id);
      if (progressLabel == null) {
        break missingId;
      }

      id = R.id.timeIcon;
      ImageView timeIcon = ViewBindings.findChildViewById(rootView, id);
      if (timeIcon == null) {
        break missingId;
      }

      id = R.id.timeText;
      TextView timeText = ViewBindings.findChildViewById(rootView, id);
      if (timeText == null) {
        break missingId;
      }

      id = R.id.todoTitle;
      TextView todoTitle = ViewBindings.findChildViewById(rootView, id);
      if (todoTitle == null) {
        break missingId;
      }

      return new ItemTaskGroupBinding((CardView) rootView, calendarIcon, dateText, menuIcon,
          progressBar, progressLabel, timeIcon, timeText, todoTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
