// Generated by view binder compiler. Do not edit!
package com.example.cleansmart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleansmart.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextView addressValue;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final MaterialButton changePasswordButton;

  @NonNull
  public final ImageView editAddressIcon;

  @NonNull
  public final MaterialButton editButton;

  @NonNull
  public final ImageView editEmailIcon;

  @NonNull
  public final ImageView editPhoneIcon;

  @NonNull
  public final ImageView editUsernameIcon;

  @NonNull
  public final TextView emailValue;

  @NonNull
  public final CoordinatorLayout main;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final TextView phoneValue;

  @NonNull
  public final ShapeableImageView profileImage;

  @NonNull
  public final TextView profileName;

  @NonNull
  public final ImageView styleSelectorIcon;

  @NonNull
  public final TextView styleValue;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView usernameValue;

  private ActivityProfileBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextView addressValue, @NonNull AppBarLayout appBarLayout,
      @NonNull ImageButton backButton, @NonNull MaterialButton changePasswordButton,
      @NonNull ImageView editAddressIcon, @NonNull MaterialButton editButton,
      @NonNull ImageView editEmailIcon, @NonNull ImageView editPhoneIcon,
      @NonNull ImageView editUsernameIcon, @NonNull TextView emailValue,
      @NonNull CoordinatorLayout main, @NonNull NestedScrollView nestedScrollView,
      @NonNull TextView phoneValue, @NonNull ShapeableImageView profileImage,
      @NonNull TextView profileName, @NonNull ImageView styleSelectorIcon,
      @NonNull TextView styleValue, @NonNull Toolbar toolbar, @NonNull TextView usernameValue) {
    this.rootView = rootView;
    this.addressValue = addressValue;
    this.appBarLayout = appBarLayout;
    this.backButton = backButton;
    this.changePasswordButton = changePasswordButton;
    this.editAddressIcon = editAddressIcon;
    this.editButton = editButton;
    this.editEmailIcon = editEmailIcon;
    this.editPhoneIcon = editPhoneIcon;
    this.editUsernameIcon = editUsernameIcon;
    this.emailValue = emailValue;
    this.main = main;
    this.nestedScrollView = nestedScrollView;
    this.phoneValue = phoneValue;
    this.profileImage = profileImage;
    this.profileName = profileName;
    this.styleSelectorIcon = styleSelectorIcon;
    this.styleValue = styleValue;
    this.toolbar = toolbar;
    this.usernameValue = usernameValue;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressValue;
      TextView addressValue = ViewBindings.findChildViewById(rootView, id);
      if (addressValue == null) {
        break missingId;
      }

      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.changePasswordButton;
      MaterialButton changePasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (changePasswordButton == null) {
        break missingId;
      }

      id = R.id.editAddressIcon;
      ImageView editAddressIcon = ViewBindings.findChildViewById(rootView, id);
      if (editAddressIcon == null) {
        break missingId;
      }

      id = R.id.editButton;
      MaterialButton editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.editEmailIcon;
      ImageView editEmailIcon = ViewBindings.findChildViewById(rootView, id);
      if (editEmailIcon == null) {
        break missingId;
      }

      id = R.id.editPhoneIcon;
      ImageView editPhoneIcon = ViewBindings.findChildViewById(rootView, id);
      if (editPhoneIcon == null) {
        break missingId;
      }

      id = R.id.editUsernameIcon;
      ImageView editUsernameIcon = ViewBindings.findChildViewById(rootView, id);
      if (editUsernameIcon == null) {
        break missingId;
      }

      id = R.id.emailValue;
      TextView emailValue = ViewBindings.findChildViewById(rootView, id);
      if (emailValue == null) {
        break missingId;
      }

      CoordinatorLayout main = (CoordinatorLayout) rootView;

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.phoneValue;
      TextView phoneValue = ViewBindings.findChildViewById(rootView, id);
      if (phoneValue == null) {
        break missingId;
      }

      id = R.id.profileImage;
      ShapeableImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.profileName;
      TextView profileName = ViewBindings.findChildViewById(rootView, id);
      if (profileName == null) {
        break missingId;
      }

      id = R.id.styleSelectorIcon;
      ImageView styleSelectorIcon = ViewBindings.findChildViewById(rootView, id);
      if (styleSelectorIcon == null) {
        break missingId;
      }

      id = R.id.styleValue;
      TextView styleValue = ViewBindings.findChildViewById(rootView, id);
      if (styleValue == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.usernameValue;
      TextView usernameValue = ViewBindings.findChildViewById(rootView, id);
      if (usernameValue == null) {
        break missingId;
      }

      return new ActivityProfileBinding((CoordinatorLayout) rootView, addressValue, appBarLayout,
          backButton, changePasswordButton, editAddressIcon, editButton, editEmailIcon,
          editPhoneIcon, editUsernameIcon, emailValue, main, nestedScrollView, phoneValue,
          profileImage, profileName, styleSelectorIcon, styleValue, toolbar, usernameValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
