// Generated by view binder compiler. Do not edit!
package com.example.cleansmart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleansmart.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTeamMemberBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView expandIcon;

  @NonNull
  public final TextView funFactText;

  @NonNull
  public final TextView memberBio;

  @NonNull
  public final LinearLayout memberContent;

  @NonNull
  public final ConstraintLayout memberHeader;

  @NonNull
  public final TextView memberName;

  @NonNull
  public final ShapeableImageView memberPhoto;

  @NonNull
  public final TextView memberTitle;

  @NonNull
  public final LinearLayout skillsContainer;

  private ItemTeamMemberBinding(@NonNull CardView rootView, @NonNull ImageView expandIcon,
      @NonNull TextView funFactText, @NonNull TextView memberBio,
      @NonNull LinearLayout memberContent, @NonNull ConstraintLayout memberHeader,
      @NonNull TextView memberName, @NonNull ShapeableImageView memberPhoto,
      @NonNull TextView memberTitle, @NonNull LinearLayout skillsContainer) {
    this.rootView = rootView;
    this.expandIcon = expandIcon;
    this.funFactText = funFactText;
    this.memberBio = memberBio;
    this.memberContent = memberContent;
    this.memberHeader = memberHeader;
    this.memberName = memberName;
    this.memberPhoto = memberPhoto;
    this.memberTitle = memberTitle;
    this.skillsContainer = skillsContainer;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTeamMemberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTeamMemberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_team_member, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTeamMemberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.expand_icon;
      ImageView expandIcon = ViewBindings.findChildViewById(rootView, id);
      if (expandIcon == null) {
        break missingId;
      }

      id = R.id.fun_fact_text;
      TextView funFactText = ViewBindings.findChildViewById(rootView, id);
      if (funFactText == null) {
        break missingId;
      }

      id = R.id.member_bio;
      TextView memberBio = ViewBindings.findChildViewById(rootView, id);
      if (memberBio == null) {
        break missingId;
      }

      id = R.id.member_content;
      LinearLayout memberContent = ViewBindings.findChildViewById(rootView, id);
      if (memberContent == null) {
        break missingId;
      }

      id = R.id.member_header;
      ConstraintLayout memberHeader = ViewBindings.findChildViewById(rootView, id);
      if (memberHeader == null) {
        break missingId;
      }

      id = R.id.member_name;
      TextView memberName = ViewBindings.findChildViewById(rootView, id);
      if (memberName == null) {
        break missingId;
      }

      id = R.id.member_photo;
      ShapeableImageView memberPhoto = ViewBindings.findChildViewById(rootView, id);
      if (memberPhoto == null) {
        break missingId;
      }

      id = R.id.member_title;
      TextView memberTitle = ViewBindings.findChildViewById(rootView, id);
      if (memberTitle == null) {
        break missingId;
      }

      id = R.id.skills_container;
      LinearLayout skillsContainer = ViewBindings.findChildViewById(rootView, id);
      if (skillsContainer == null) {
        break missingId;
      }

      return new ItemTeamMemberBinding((CardView) rootView, expandIcon, funFactText, memberBio,
          memberContent, memberHeader, memberName, memberPhoto, memberTitle, skillsContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
