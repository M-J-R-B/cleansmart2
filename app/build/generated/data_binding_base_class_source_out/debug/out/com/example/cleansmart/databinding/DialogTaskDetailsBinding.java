// Generated by view binder compiler. Do not edit!
package com.example.cleansmart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleansmart.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogTaskDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView areaImageView;

  @NonNull
  public final ImageButton closeButton;

  @NonNull
  public final TextView dialogTitle;

  @NonNull
  public final TextView noImageText;

  @NonNull
  public final RecyclerView taskDetailsRecyclerView;

  @NonNull
  public final TextView taskListTitle;

  private DialogTaskDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView areaImageView, @NonNull ImageButton closeButton,
      @NonNull TextView dialogTitle, @NonNull TextView noImageText,
      @NonNull RecyclerView taskDetailsRecyclerView, @NonNull TextView taskListTitle) {
    this.rootView = rootView;
    this.areaImageView = areaImageView;
    this.closeButton = closeButton;
    this.dialogTitle = dialogTitle;
    this.noImageText = noImageText;
    this.taskDetailsRecyclerView = taskDetailsRecyclerView;
    this.taskListTitle = taskListTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogTaskDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogTaskDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_task_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogTaskDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.areaImageView;
      ImageView areaImageView = ViewBindings.findChildViewById(rootView, id);
      if (areaImageView == null) {
        break missingId;
      }

      id = R.id.closeButton;
      ImageButton closeButton = ViewBindings.findChildViewById(rootView, id);
      if (closeButton == null) {
        break missingId;
      }

      id = R.id.dialogTitle;
      TextView dialogTitle = ViewBindings.findChildViewById(rootView, id);
      if (dialogTitle == null) {
        break missingId;
      }

      id = R.id.noImageText;
      TextView noImageText = ViewBindings.findChildViewById(rootView, id);
      if (noImageText == null) {
        break missingId;
      }

      id = R.id.taskDetailsRecyclerView;
      RecyclerView taskDetailsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (taskDetailsRecyclerView == null) {
        break missingId;
      }

      id = R.id.taskListTitle;
      TextView taskListTitle = ViewBindings.findChildViewById(rootView, id);
      if (taskListTitle == null) {
        break missingId;
      }

      return new DialogTaskDetailsBinding((ConstraintLayout) rootView, areaImageView, closeButton,
          dialogTitle, noImageText, taskDetailsRecyclerView, taskListTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
