// Generated by view binder compiler. Do not edit!
package com.example.cleansmart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleansmart.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogLogoutConfirmationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton cancelButton;

  @NonNull
  public final MaterialButton logoutButton;

  @NonNull
  public final TextView logoutQuestionText;

  @NonNull
  public final TextView logoutTitleText;

  @NonNull
  public final MaterialButton saveLogoutButton;

  private DialogLogoutConfirmationBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton cancelButton, @NonNull MaterialButton logoutButton,
      @NonNull TextView logoutQuestionText, @NonNull TextView logoutTitleText,
      @NonNull MaterialButton saveLogoutButton) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.logoutButton = logoutButton;
    this.logoutQuestionText = logoutQuestionText;
    this.logoutTitleText = logoutTitleText;
    this.saveLogoutButton = saveLogoutButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogLogoutConfirmationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogLogoutConfirmationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_logout_confirmation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogLogoutConfirmationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelButton;
      MaterialButton cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.logoutButton;
      MaterialButton logoutButton = ViewBindings.findChildViewById(rootView, id);
      if (logoutButton == null) {
        break missingId;
      }

      id = R.id.logoutQuestionText;
      TextView logoutQuestionText = ViewBindings.findChildViewById(rootView, id);
      if (logoutQuestionText == null) {
        break missingId;
      }

      id = R.id.logoutTitleText;
      TextView logoutTitleText = ViewBindings.findChildViewById(rootView, id);
      if (logoutTitleText == null) {
        break missingId;
      }

      id = R.id.saveLogoutButton;
      MaterialButton saveLogoutButton = ViewBindings.findChildViewById(rootView, id);
      if (saveLogoutButton == null) {
        break missingId;
      }

      return new DialogLogoutConfirmationBinding((ConstraintLayout) rootView, cancelButton,
          logoutButton, logoutQuestionText, logoutTitleText, saveLogoutButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
