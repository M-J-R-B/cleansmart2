// Generated by view binder compiler. Do not edit!
package com.example.cleansmart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleansmart.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileUpdateSuccessBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final Button continueButton;

  @NonNull
  public final LinearLayout headerLayout;

  @NonNull
  public final CardView successCard;

  @NonNull
  public final TextView updatedAddressValue;

  @NonNull
  public final TextView updatedEmailValue;

  @NonNull
  public final CardView updatedInfoCard;

  @NonNull
  public final TextView updatedInfoTitle;

  @NonNull
  public final TextView updatedNameValue;

  @NonNull
  public final TextView updatedPhoneValue;

  @NonNull
  public final TextView updatedUsernameValue;

  private ActivityProfileUpdateSuccessBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton backButton, @NonNull Button continueButton,
      @NonNull LinearLayout headerLayout, @NonNull CardView successCard,
      @NonNull TextView updatedAddressValue, @NonNull TextView updatedEmailValue,
      @NonNull CardView updatedInfoCard, @NonNull TextView updatedInfoTitle,
      @NonNull TextView updatedNameValue, @NonNull TextView updatedPhoneValue,
      @NonNull TextView updatedUsernameValue) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.continueButton = continueButton;
    this.headerLayout = headerLayout;
    this.successCard = successCard;
    this.updatedAddressValue = updatedAddressValue;
    this.updatedEmailValue = updatedEmailValue;
    this.updatedInfoCard = updatedInfoCard;
    this.updatedInfoTitle = updatedInfoTitle;
    this.updatedNameValue = updatedNameValue;
    this.updatedPhoneValue = updatedPhoneValue;
    this.updatedUsernameValue = updatedUsernameValue;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileUpdateSuccessBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileUpdateSuccessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile_update_success, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileUpdateSuccessBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.continueButton;
      Button continueButton = ViewBindings.findChildViewById(rootView, id);
      if (continueButton == null) {
        break missingId;
      }

      id = R.id.headerLayout;
      LinearLayout headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.successCard;
      CardView successCard = ViewBindings.findChildViewById(rootView, id);
      if (successCard == null) {
        break missingId;
      }

      id = R.id.updatedAddressValue;
      TextView updatedAddressValue = ViewBindings.findChildViewById(rootView, id);
      if (updatedAddressValue == null) {
        break missingId;
      }

      id = R.id.updatedEmailValue;
      TextView updatedEmailValue = ViewBindings.findChildViewById(rootView, id);
      if (updatedEmailValue == null) {
        break missingId;
      }

      id = R.id.updatedInfoCard;
      CardView updatedInfoCard = ViewBindings.findChildViewById(rootView, id);
      if (updatedInfoCard == null) {
        break missingId;
      }

      id = R.id.updatedInfoTitle;
      TextView updatedInfoTitle = ViewBindings.findChildViewById(rootView, id);
      if (updatedInfoTitle == null) {
        break missingId;
      }

      id = R.id.updatedNameValue;
      TextView updatedNameValue = ViewBindings.findChildViewById(rootView, id);
      if (updatedNameValue == null) {
        break missingId;
      }

      id = R.id.updatedPhoneValue;
      TextView updatedPhoneValue = ViewBindings.findChildViewById(rootView, id);
      if (updatedPhoneValue == null) {
        break missingId;
      }

      id = R.id.updatedUsernameValue;
      TextView updatedUsernameValue = ViewBindings.findChildViewById(rootView, id);
      if (updatedUsernameValue == null) {
        break missingId;
      }

      return new ActivityProfileUpdateSuccessBinding((ConstraintLayout) rootView, backButton,
          continueButton, headerLayout, successCard, updatedAddressValue, updatedEmailValue,
          updatedInfoCard, updatedInfoTitle, updatedNameValue, updatedPhoneValue,
          updatedUsernameValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
