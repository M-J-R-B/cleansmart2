// Generated by view binder compiler. Do not edit!
package com.example.cleansmart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleansmart.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangePasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final MaterialButton btnChangePassword;

  @NonNull
  public final TextInputLayout confirmPasswordLayout;

  @NonNull
  public final TextInputEditText etConfirmPassword;

  @NonNull
  public final TextInputEditText etNewPassword;

  @NonNull
  public final TextInputEditText etOldPassword;

  @NonNull
  public final TextInputLayout newPasswordLayout;

  @NonNull
  public final TextInputLayout oldPasswordLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView titleTextView;

  private ActivityChangePasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton backButton, @NonNull MaterialButton btnChangePassword,
      @NonNull TextInputLayout confirmPasswordLayout, @NonNull TextInputEditText etConfirmPassword,
      @NonNull TextInputEditText etNewPassword, @NonNull TextInputEditText etOldPassword,
      @NonNull TextInputLayout newPasswordLayout, @NonNull TextInputLayout oldPasswordLayout,
      @NonNull ProgressBar progressBar, @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.btnChangePassword = btnChangePassword;
    this.confirmPasswordLayout = confirmPasswordLayout;
    this.etConfirmPassword = etConfirmPassword;
    this.etNewPassword = etNewPassword;
    this.etOldPassword = etOldPassword;
    this.newPasswordLayout = newPasswordLayout;
    this.oldPasswordLayout = oldPasswordLayout;
    this.progressBar = progressBar;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.btnChangePassword;
      MaterialButton btnChangePassword = ViewBindings.findChildViewById(rootView, id);
      if (btnChangePassword == null) {
        break missingId;
      }

      id = R.id.confirmPasswordLayout;
      TextInputLayout confirmPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (confirmPasswordLayout == null) {
        break missingId;
      }

      id = R.id.etConfirmPassword;
      TextInputEditText etConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (etConfirmPassword == null) {
        break missingId;
      }

      id = R.id.etNewPassword;
      TextInputEditText etNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (etNewPassword == null) {
        break missingId;
      }

      id = R.id.etOldPassword;
      TextInputEditText etOldPassword = ViewBindings.findChildViewById(rootView, id);
      if (etOldPassword == null) {
        break missingId;
      }

      id = R.id.newPasswordLayout;
      TextInputLayout newPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordLayout == null) {
        break missingId;
      }

      id = R.id.oldPasswordLayout;
      TextInputLayout oldPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (oldPasswordLayout == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new ActivityChangePasswordBinding((ConstraintLayout) rootView, backButton,
          btnChangePassword, confirmPasswordLayout, etConfirmPassword, etNewPassword, etOldPassword,
          newPasswordLayout, oldPasswordLayout, progressBar, titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
