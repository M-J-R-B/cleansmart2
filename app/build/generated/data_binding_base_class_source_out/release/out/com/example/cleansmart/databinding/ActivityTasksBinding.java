// Generated by view binder compiler. Do not edit!
package com.example.cleansmart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cleansmart.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTasksBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton addTaskFab;

  @NonNull
  public final LayoutBottomNavigationBinding bottomNavigation;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView progressLabel;

  @NonNull
  public final TextView progressPercentage;

  @NonNull
  public final ProgressBar taskProgressBar;

  @NonNull
  public final RecyclerView tasksRecyclerView;

  @NonNull
  public final TextView tasksTitle;

  private ActivityTasksBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton addTaskFab,
      @NonNull LayoutBottomNavigationBinding bottomNavigation, @NonNull ProgressBar progressBar,
      @NonNull TextView progressLabel, @NonNull TextView progressPercentage,
      @NonNull ProgressBar taskProgressBar, @NonNull RecyclerView tasksRecyclerView,
      @NonNull TextView tasksTitle) {
    this.rootView = rootView;
    this.addTaskFab = addTaskFab;
    this.bottomNavigation = bottomNavigation;
    this.progressBar = progressBar;
    this.progressLabel = progressLabel;
    this.progressPercentage = progressPercentage;
    this.taskProgressBar = taskProgressBar;
    this.tasksRecyclerView = tasksRecyclerView;
    this.tasksTitle = tasksTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTasksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTasksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_tasks, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTasksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addTaskFab;
      FloatingActionButton addTaskFab = ViewBindings.findChildViewById(rootView, id);
      if (addTaskFab == null) {
        break missingId;
      }

      id = R.id.bottomNavigation;
      View bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }
      LayoutBottomNavigationBinding binding_bottomNavigation = LayoutBottomNavigationBinding.bind(bottomNavigation);

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressLabel;
      TextView progressLabel = ViewBindings.findChildViewById(rootView, id);
      if (progressLabel == null) {
        break missingId;
      }

      id = R.id.progressPercentage;
      TextView progressPercentage = ViewBindings.findChildViewById(rootView, id);
      if (progressPercentage == null) {
        break missingId;
      }

      id = R.id.taskProgressBar;
      ProgressBar taskProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (taskProgressBar == null) {
        break missingId;
      }

      id = R.id.tasksRecyclerView;
      RecyclerView tasksRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (tasksRecyclerView == null) {
        break missingId;
      }

      id = R.id.tasksTitle;
      TextView tasksTitle = ViewBindings.findChildViewById(rootView, id);
      if (tasksTitle == null) {
        break missingId;
      }

      return new ActivityTasksBinding((ConstraintLayout) rootView, addTaskFab,
          binding_bottomNavigation, progressBar, progressLabel, progressPercentage, taskProgressBar,
          tasksRecyclerView, tasksTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
